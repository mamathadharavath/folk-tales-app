import streamlit as st
import pandas as pd
import random
import unicodedata


# Load the CSV file
df = pd.read_csv("stories.csv")
st.subheader("üìã Dataset Preview")
st.dataframe(df)

# Function to normalize Telugu/Unicode text
def normalize_text(text):
    return unicodedata.normalize('NFC', str(text)).strip().lower()

# Page settings
st.set_page_config(page_title="Telugu Folk Tales Explorer", layout="wide")
st.title("üìñ ‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å ‡∞ú‡∞æ‡∞®‡∞™‡∞¶ ‡∞ï‡∞•‡∞≤ ‡∞Ö‡∞®‡±ç‡∞µ‡±á‡∞∑‡∞£")

# Search input
query = st.text_input("üîç ‡∞ï‡∞• ‡∞∂‡±Ä‡∞∞‡±ç‡∞∑‡∞ø‡∞ï ‡∞≤‡±á‡∞¶‡∞æ ‡∞ï‡±Ä‡∞≤‡∞ï ‡∞™‡∞¶‡∞Ç ‡∞®‡∞Æ‡±ã‡∞¶‡±Å ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø:")

# Normalize the search query
normalized_query = normalize_text(query)

# Filter results using improved partial matching
if normalized_query:
    results = df[df.apply(
        lambda row: any([
            normalize_text(row['title']).startswith(normalized_query),
            normalize_text(row['story']).startswith(normalized_query),
            normalized_query in normalize_text(row['title']),
            normalized_query in normalize_text(row['story'])
        ]),
        axis=1
    )]

    if not results.empty:
        for _, row in results.iterrows():
            st.subheader(row['title'])
            st.write(row['story'])
            st.markdown("---")
    else:
        st.warning("‡∞è‡∞Æ‡±à‡∞®‡∞æ ‡∞ï‡∞• ‡∞ï‡∞®‡∞ø‡∞™‡∞ø‡∞Ç‡∞ö‡∞≤‡±á‡∞¶‡±Å. ‡∞Æ‡∞∞‡±ã ‡∞™‡∞¶‡∞Ç‡∞§‡±ã ‡∞™‡±ç‡∞∞‡∞Ø‡∞§‡±ç‡∞®‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø.")
else:
    st.info("‡∞ï‡∞• ‡∞ï‡±ã‡∞∏‡∞Ç ‡∞™‡±à ‡∞∏‡±Ü‡∞∞‡±ç‡∞ö‡±ç ‡∞¨‡∞æ‡∞ï‡±ç‡∞∏‡±ç‚Äå‡∞®‡±Å ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø ‡∞≤‡±á‡∞¶‡∞æ ‡∞ï‡±ç‡∞∞‡∞ø‡∞Ç‡∞¶ ‡∞Ø‡∞æ‡∞¶‡±É‡∞ö‡±ç‡∞õ‡∞ø‡∞ï ‡∞ï‡∞•‡∞®‡±Å ‡∞ö‡±Ç‡∞°‡∞Ç‡∞°‡∞ø.")

# Random story button
if st.button("üé≤ ‡∞í‡∞ï ‡∞Ø‡∞æ‡∞¶‡±É‡∞ö‡±ç‡∞õ‡∞ø‡∞ï ‡∞ï‡∞• ‡∞ö‡±Ç‡∞™‡∞ø‡∞Ç‡∞ö‡±Å"):
    story = random.choice(df.to_dict(orient='records'))
    st.subheader(story['title'])
    st.write(story['story'])

# Footer
st.markdown("---")
st.caption("Made with ‚ù§Ô∏è by Mamatha | Summer of AI 2025")
